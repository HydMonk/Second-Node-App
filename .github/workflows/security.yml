name: DevSecOps Pipeline

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  actions: read
  contents: read
  security-events: write  # ✅ Enables SARIF upload
  
jobs:
  semgrep:
    name: Static Code Analysis (Semgrep)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep (free, local scan)
        run: |
          semgrep --config=auto --sarif --output=semgrep1.sarif || true

      #- name: Upload Semgrep findings as artifact
        #uses: actions/upload-artifact@v4
        #with:
         # name: semgrep-findings
         # path: semgrep-results.json

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep1.sarif

      - name: Fail if high severity Semgrep findings
        run: |
          if grep -q '"severity": "ERROR"' semgrep-results.json; then
            echo "❌ Semgrep found high severity issues"
            cat semgrep-results.json
            exit 1
          else
            echo "✅ No high severity Semgrep findings"
          fi

      - name: Archive reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            semgrep1.sarif 

  snyk:
    name: Dependency Vulnerability Scan (Snyk)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Snyk CLI
        run: npm install -g snyk

      - name: Authenticate with Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}

      - name: Snyk test (root)
        run: snyk test --json > snyk-results-root.json

      - name: Snyk test (client/)
        run: snyk test --json > snyk-results-client.json
        working-directory: client

      - name: Snyk test (server/)
        run: snyk test --json > snyk-results-server.json
        working-directory: server  

      - name: Archive reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            snyk-results-server.json
            snyk-results-client.json
            snyk-results-root.json

  secrets:
    name: Secrets Detection (TruffleHog)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This ensures full commit history is available

      - name: Scan for secrets with TruffleHog
        uses: trufflesecurity/trufflehog@main

